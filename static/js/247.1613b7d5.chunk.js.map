{"version":3,"file":"static/js/247.1613b7d5.chunk.js","mappings":"0OAmEA,UA9DA,WACE,OAAgCA,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACQC,GAAaC,EAAAA,EAAAA,MAAbD,SACFE,EAAO,gBAAYF,EAAZ,YAyBb,OAvBAG,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAkB,IAAIC,gBAEtBC,EAAS,mCAAG,2FAChBP,GAAa,GADG,mBAGUQ,EAAAA,EAAAA,GAAYL,EAASE,EAAgBI,QAH/C,OAGRC,EAHQ,OAIdZ,EAAYY,EAAUC,MAJR,gDAMI,iBAAf,KAAMC,MACPC,QAAQC,IAAI,KAAMC,SAPN,yBAUdf,GAAa,GAVC,4EAAH,qDAef,OAFAO,IAEO,WACLF,EAAgBW,OACjB,CACF,GAAE,CAACb,KAGF,gCACGJ,IAAa,SAAC,IAAD,KACd,6BACGF,GACCA,EAASoB,KAAI,SAAAC,GACX,OACE,2BACE,wBAAKA,EAAKC,aACV,wBACGD,EAAKE,cACJ,gBACEC,IAAG,yCAAoCH,EAAKE,cAC5CE,IAAG,UAAKJ,EAAKC,WACbI,MAAM,SAGR,gBACEF,IAAG,yDACHC,IAAG,UAAKJ,EAAKC,WACbI,MAAM,WAIZ,wBAAKL,EAAKM,kBAjBHN,EAAKO,GAoBjB,QAIV,C,gFC/DYC,E,QAAkBC,EAAAA,IAAH,oK,SCCrB,SAASC,IACd,OACE,SAACF,EAAD,WACI,SAAC,KAAD,CACEG,OAAO,KACPN,MAAM,KACNO,MAAM,UACNC,UAAU,kBACVC,aAAc,CAAC,EACfC,aAAa,GACbC,SAAS,KAKlB,C,kGChBKC,EAAU,mCAGT,SAAe3B,EAAtB,iDAAO,OAAP,oBAAO,WAA2BL,EAASM,GAApC,wFAA4C2B,EAA5C,+BAAoD,GACpDjC,EADA,kEAKgBkC,EAAAA,EAAAA,GAAM,IAAD,OAAKlC,EAAL,oBAAwBgC,EAAxB,kBAAyCC,GAAS,CAC1E3B,OAAAA,IANG,cAKC6B,EALD,yBAQEA,EAAOC,MART,mEAFPF,EAAAA,EAAAA,SAAAA,QAAyB,8B","sources":["components/Cast/Cast.jsx","components/Spinner/Spinner.styled.jsx","components/Spinner/Spinner.jsx","service/api-themoviedb.js"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { fetchMovies } from 'service/api-themoviedb';\nimport { Spinner } from 'components/Spinner/Spinner';\n\nfunction Cast() {\n  const [castList, setCastList] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const { moviesId } = useParams();\n  const request = `movie/${moviesId}/credits`;\n\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    const fetchData = async () => {\n      setIsLoading(true);\n      try {\n        const castMovie = await fetchMovies(request, abortController.signal);\n        setCastList(castMovie.cast);\n      } catch (error) {\n        if(error.code !== 'ERR_CANCELED') {\n          console.log(error.message); \n        }\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n\n    return () => {\n      abortController.abort(); \n    };\n  }, [request]);\n\n  return (\n    <>\n      {isLoading && <Spinner />}\n      <section>\n        {castList &&\n          castList.map(item => {\n            return (\n              <ul key={item.id}>\n                <li>{item.character}</li>\n                <li>\n                  {item.profile_path ? (\n                    <img\n                      src={`https://image.tmdb.org/t/p/w500${item.profile_path}`}\n                      alt={`${item.character}`}\n                      width=\"100\"\n                    />\n                  ) : (\n                    <img\n                      src={`http://dummyimage.com/100x150/99cccc.jpg&text=No+photo`}\n                      alt={`${item.character}`}\n                      width=\"100\"\n                    />\n                  )}\n                </li>\n                <li>{item.original_name}</li>\n              </ul>\n            );\n          })}\n      </section>\n    </>\n  );\n};\n\nexport default Cast;","import styled from \"@emotion/styled\";\n\nexport const StyledContainer = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`","import { Circles } from  'react-loader-spinner'\nimport { StyledContainer } from './Spinner.styled';\n\nexport function Spinner(){\n  return (\n    <StyledContainer>\n        <Circles\n          height=\"60\"\n          width=\"60\"\n          color=\"#3f51b5\"\n          ariaLabel=\"circles-loading\"\n          wrapperStyle={{}}\n          wrapperClass=\"\"\n          visible={true}\n        />\n    </StyledContainer>\n\n    )\n};\n","import axios from 'axios';\n\nconst API_KEY = '203c8efd66ec76470e0f4b5662bc1dde';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport async function fetchMovies(request, signal, query = '') {\n  if (!request) {\n    return;\n  }\n\n  const result = await axios(`/${request}?api_key=${API_KEY}&query=${query}`, {\n    signal,\n  });\n  return result.data;\n};\n\n"],"names":["useState","castList","setCastList","isLoading","setIsLoading","moviesId","useParams","request","useEffect","abortController","AbortController","fetchData","fetchMovies","signal","castMovie","cast","code","console","log","message","abort","map","item","character","profile_path","src","alt","width","original_name","id","StyledContainer","styled","Spinner","height","color","ariaLabel","wrapperStyle","wrapperClass","visible","API_KEY","query","axios","result","data"],"sourceRoot":""}